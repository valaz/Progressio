jobs:
  include:
    # Build Java Server
    - stage: Build
      language: java
      jdk: oraclejdk8
      addons:
        sonarcloud:
          organization: valaz-github
          token:
            secure: "$SONAR_TOKEN"
      before_install:
        - cd grafeo-server
      install:
        - mvn install -DskipTests=true -B
      script:
        - mvn test -B
      name: "Server build"
      cache:
        directories:
          - "$HOME/.m2/repository"
          - "$HOME/.sonar/cache"
    - script: npm run-script build
      name: "Web build"
      language: node_js
      node_js: "10"
      before_install:
        - cd grafeo-web
      install:
        - npm install
      cache:
        npm: true
        directories:
          - grafeo-web/node_modules
    # Deploy Web to Dev environment
    - stage: deploy Web to dev
      if: branch IN (dev, monorepo) & [ $TRAVIS_PULL_REQUEST == false ]
      before_deploy:
        - openssl aes-256-cbc -K $encrypted_fb8c75fa2d2a_key -iv $encrypted_fb8c75fa2d2a_iv
          -in .travis/deploy.key.enc -out .travis/deploy.key -d
        - eval "$(ssh-agent -s)"
        - chmod 600 .travis/deploy.key
        - ssh-add .travis/deploy.key
        - ssh-keyscan dokku.valiev.top >> ~/.ssh/known_hosts
        - git remote add grafeo-dev-web dokku@dokku.valiev.top:grafeo-dev-web
        - git config --global push.default simple
      script: skip
      deploy:
        - provider: script
          script: bash .travis/deploy_grafeo-dev-web.sh
          on:
            branch: monorepo
      language: bash
    # Deploy Server to Dev environment
    - stage: deploy Server to dev
      if: branch IN (dev, monorepo)
      before_deploy:
        - openssl aes-256-cbc -K $encrypted_fb8c75fa2d2a_key -iv $encrypted_fb8c75fa2d2a_iv
          -in .travis/deploy.key.enc -out .travis/deploy.key -d
        - eval "$(ssh-agent -s)"
        - chmod 600 .travis/deploy.key
        - ssh-add .travis/deploy.key
        - ssh-keyscan dokku.valiev.top >> ~/.ssh/known_hosts
        - git remote add grafeo-dev dokku@dokku.valiev.top:grafeo-dev
        - git config --global push.default simple
      script: skip
      deploy:
        - provider: script
          script: bash .travis/deploy_grafeo-dev.sh
          on:
            branch: monorepo
      language: bash
    # Test availability on Dev environment
    - stage: check dev environment
      script: 'curl https://dev.grafeo.pro'
      name: "Dev Web availability"
      if: branch IN (dev, monorepo)
      language: bash
    - script: 'curl https://dpi.grafeo.pro/api/common/fresh'
      name: "Dev Server availability"
      if: branch IN (dev, monorepo)
      language: bash
    # Deploy Web to Prod environment
    - stage: deploy Web to prod
      if: branch = master
      before_deploy:
        - openssl aes-256-cbc -K $encrypted_fb8c75fa2d2a_key -iv $encrypted_fb8c75fa2d2a_iv
          -in .travis/deploy.key.enc -out .travis/deploy.key -d
        - eval "$(ssh-agent -s)"
        - chmod 600 .travis/deploy.key
        - ssh-add .travis/deploy.key
        - ssh-keyscan dokku.valiev.top >> ~/.ssh/known_hosts
        - git remote add grafeo-web dokku@dokku.valiev.top:grafeo-web
        - git config --global push.default simple
      script: skip
      deploy:
          - provider: script
            script: bash .travis/deploy_grafeo-web.sh
            on:
              branch: master
      language: bash
    # Deploy Server to Prod environment
    - stage: deploy Server to prod
      if: branch = master
      before_deploy:
        - openssl aes-256-cbc -K $encrypted_fb8c75fa2d2a_key -iv $encrypted_fb8c75fa2d2a_iv
          -in .travis/deploy.key.enc -out .travis/deploy.key -d
        - eval "$(ssh-agent -s)"
        - chmod 600 .travis/deploy.key
        - ssh-add .travis/deploy.key
        - ssh-keyscan dokku.valiev.top >> ~/.ssh/known_hosts
        - git remote add grafeo dokku@dokku.valiev.top:grafeo
        - git config --global push.default simple
      script: skip
      deploy:
          - provider: script
            script: bash .travis/deploy_grafeo.sh
            on:
              branch: master
      language: bash
    # Test availability on Prod environment
    - stage: check prod environment
      script: 'curl https://grafeo.pro'
      name: "Prod Web availability"
      if: branch = master
      language: bash
    - script: 'curl https://api.grafeo.pro/api/common/fresh'
      name: "Prod Server availability"
      if: branch = master
      language: bash
